@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if $index {
	@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

@function number($value) {
  @if type-of($value) == 'number' {
	@return $value;
  } @else if type-of($value) != 'string' {
	$_: log('Value for `to-number` should be a number or a string.');
  }

  $result: 0;
  $digits: 0;
  $minus: str-slice($value, 1, 1) == '-';
  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);

  @for $i from if($minus, 2, 1) through str-length($value) {
	$character: str-slice($value, $i, $i);

	@if not (index(map-keys($numbers), $character) or $character == '.') {
	  @return to-length(if($minus, -$result, $result), str-slice($value, $i))
	}

	@if $character == '.' {
	  $digits: 1;
	} @else if $digits == 0 {
	  $result: $result * 10 + map-get($numbers, $character);
	} @else {
	  $digits: $digits * 10;
	  $result: $result + map-get($numbers, $character) / $digits;
	}
  }

  @return if($minus, -$result, $result);
}

@function remy($pxsize, $rembase:14) {
  $size: str-replace($pxsize, 'px', '');
  @return (number($size)/$rembase)+rem;
}

@function negremy($pxsize,  $rembase:14) {
  $size: str-replace($pxsize, 'px', '');
  @return (-$size/$rembase)+rem;
}
